{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["globalSeconds","event","Event","ti","e","window","setInterval","clearInterval","Pomodoro","props","state","session","sec","negSec","increment","bind","decrement","incBreak","decBreak","reset","ss","count","sound","document","addEventListener","alert","dispatchEvent","this","setState","getElementById","pause","currentTime","play","className","id","onClick","src","href","React","Component","ReactDOM","render","Boolean","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36a09b9a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nlet globalSeconds = 0; //partially inspired by answer on stack overflow (setting the variable to null), I have managed to lose the page on which the answer was found, and am continuing to look for it\nlet event = new Event('sound')\n\n\nfunction ti (e) { //pausing timer partially inspired by answer on stack overflow (setting variable to null after calling clearInterval), I have managed to lose the page on which the answer was found, and am continuing to look for it\n  if (globalSeconds === 0) {\n    return globalSeconds = window.setInterval(e, 1000)\n   }\n\n   clearInterval(globalSeconds)\n   globalSeconds = 0;\n  }\n  \n  \n\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      session: 1500,\n      sec: 1500,\n      negSec: -300,\n    }\n    \n    \n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.incBreak = this.incBreak.bind(this);\n    this.decBreak = this.decBreak.bind(this);\n    this.reset = this.reset.bind(this);\n    this.ss = this.ss.bind(this);\n    this.count = this.count.bind(this);\n    this.sound = this.sound.bind(this);\n    }\n\n componentDidMount() {\n   document.addEventListener('flip', e => {if(this.state.sec === this.state.negSec-1)\n   alert('hello')})\n   document.dispatchEvent(event)\n }\n \n  increment(event) {\n    if(this.state.session <= 3540)\n    this.setState({ \n      session: this.state.session + 60,\n      sec: this.state.sec + 60\n     })\n    \n  }\n\n  \n  decrement(event) {\n    if(this.state.session >=120)\n      this.setState({ \n        session: this.state.session - 60,\n        sec: this.state.sec - 60\n       })\n       \n  }\n\n  incBreak(event) {\n    if(this.state.negSec >= -3540)\n      this.setState({\n        negSec: this.state.negSec -60\n      })\n       }\n\n  decBreak(event) {\n    if(this.state.negSec <= -120)\n      this.setState({\n        negSec: this.state.negSec +60\n      })\n  }\n\n  reset(event) {\n    this.setState({\n      session: 1500,\n      negSec: -300,\n      sec: 1500\n    })\n\n    clearInterval(globalSeconds)\n    globalSeconds = 0;\n    document.getElementById('beep').pause() //attributed to stack overflow answer by Jatin linked to\n    document.getElementById('beep').currentTime = 0 //attributed to stack overflow answer by Jatin linked to\n    }\n \n\n  ss(event) {    \n    if (this.state.sec > this.state.negSec -2)\n          this.setState({ sec: this.state.sec - 1 });\n    }\n\n  count(event) { \n    ti(this.ss)  \n    \n    if(this.state.sec === (this.state.negSec-1)) {\n      this.setState({ sec: this.state.session })\n      ti(this.ss)  \n  }\n  }\n\n  sound(event) {\n    if(this.state.sec === 0 || this.state.sec === this.state.negSec-2)\n    document.getElementById('beep').play()\n  }\n\n  render() {\n    \n      document.addEventListener('sound', this.sound)\n      document.dispatchEvent(event)\n \n\n    return (\n      \n        <div className=\"container-fluid\">\n        \n        <h1>Pomodoro Clock</h1>  \n        <div id=\"start_stop\" onClick={this.count}>&#x25B6;&#x23f8;</div> <br />\n        <div id=\"conBox\">\n        <div id='timer-label'>{this.state.sec > -1? \"Session\" : this.state.sec === this.state.negSec-2? \"Session\" : \"Break\"}\n        <audio src=\"https://raw.githubusercontent.com/LeiCorre/pomodoro/master/src/Clock.mp3\" id=\"beep\"></audio>\n    <div id='time-left'>\n      {this.state.sec >-1? \n        <div id=\"ses\">\n          {((this.state.sec - (this.state.sec % 60))/60) <10? \n          '0'+ (this.state.sec - (this.state.sec % 60))/60 : (this.state.sec - (this.state.sec % 60))/60}\n          :\n          {(this.state.sec % 60) < 10? \n          '0'+this.state.sec % 60: this.state.sec % 60}\n      </div> : this.state.sec === this.state.negSec-2? \n      <div>{((this.state.session - (this.state.session % 60))/60) <10? \n        '0'+ (this.state.session - (this.state.session % 60))/60 : (this.state.session - (this.state.session % 60))/60}:00</div>\n      :\n      <div id=\"ses2\">\n          {(((this.state.sec + 1 + this.state.negSec*-1) - ((this.state.sec + 1 + this.state.negSec*-1) % 60))/60) <10? \n          '0'+ ((this.state.sec + 1 + this.state.negSec*-1) - ((this.state.sec + 1 + this.state.negSec*-1) % 60))/60 : ((this.state.sec + 1 + this.state.negSec*-1) - ((this.state.sec + 1 + this.state.negSec*-1) % 60))/60}\n          :\n          {((this.state.sec + 1 + this.state.negSec*-1) % 60) < 10? \n          '0'+(this.state.sec + 1 + this.state.negSec*-1) % 60: (this.state.sec + 1 + this.state.negSec*-1) % 60}\n      </div>\n      \n      }\n      \n    </div>\n    \n        </div>\n        </div>\n        <div id=\"reset\" onClick={this.reset}>&#8634;</div>\n        \n        <div className=\"row\">\n          <div className='col' >\n          \n          </div>\n          <div className='col-xl-3'>\n        <div id=\"session-label\">Session Length</div>\n        \n        <span id=\"session-decrement\" className=\"but btn btn-light\" onClick={this.decrement}> &#9664;</span>  &nbsp;\n        <span id=\"session-length\">{this.state.session/60}</span>  &nbsp;\n        <span id=\"session-increment\" className=\"but btn btn-light\" onClick={this.increment}>&#9658; </span>\n        \n        </div>\n        \n\n        <div className='col-xl-3'>\n        <div id=\"break-label\">Break Length</div>\n        \n        <span id=\"break-decrement\" className=\"but btn btn-light\" onClick={this.decBreak}> &#9664; </span> &nbsp;\n        <span id=\"break-length\">{this.state.negSec/-60}</span> &nbsp;\n        <span id=\"break-increment\" className=\"but btn btn-light\" onClick={this.incBreak}>  &#9658; </span>\n        </div>\n        <div className='col' />\n        </div>\n        <br /><br />\n        <h3>Designed and Coded by LeiCorre</h3>\n        <h5>With reference to <a href=\"https://stackoverflow.com/questions/13243235/html5-audio-how-to-quickly-stop-and-restart-a-clip\">Here</a> by Jatin for Resetting an Audio Clip\n        And the <a href=\"https://stackoverflow.com/\">Stack Overflow</a> in regard to making clearInterval work</h5>\n        <h5>Digital Dream font by Jakob Fischer @ <a href=\"http://pizzadude.dk/site/\">Pizzadude.dk</a></h5>\n        </div>\n\n      \n    )\n  }\n}\n\nReactDOM.render(<Pomodoro />, document.getElementById('root'))\nexport default Pomodoro;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}